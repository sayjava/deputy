__NUXT_JSONP__("/assertions", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V){return {data:[{document:{slug:B,title:C,position:10,toc:[{id:B,depth:D,text:C},{id:E,depth:n,text:F},{id:G,depth:n,text:H},{id:I,depth:n,text:J},{id:K,depth:n,text:L},{id:M,depth:n,text:N},{id:O,depth:D,text:P},{id:Q,depth:n,text:R}],body:{type:"root",children:[{type:b,tag:g,props:{},children:[{type:a,value:"Deputy can be used to in a functional or user acceptance testing environment to validate an application's functionalities without\u002Fwithout making requests to external services."}]},{type:a,value:c},{type:b,tag:"img",props:{src:"test_environment.png",width:1280,height:640,alt:"Test Environment"},children:[]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Requests made to\u002Fvia Deputy are recorded and can be asserted against in a test environment."}]},{type:a,value:c},{type:b,tag:S,props:{id:B},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#assertions",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"The server can validate how many times a request is received and matched if at all."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"If the validation passes, the server returns an "},{type:b,tag:h,props:{},children:[{type:a,value:"HTTP 201"}]},{type:a,value:" but if fails, the server returns an "},{type:b,tag:h,props:{},children:[{type:a,value:"HTTP 406"}]},{type:a,value:" with reason why it fails"}]},{type:a,value:c},{type:b,tag:o,props:{id:E},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#request-was-matched-at-least-once",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:F}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Check if the requests have been received and matched at least once"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,t]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:d,props:{className:[e,u]},children:[{type:a,value:"# Responds with 201"}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,v]},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:y}]},{type:a,value:z},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:"'\n[\n  {\n    \"request\": {\n      \"path\": \"\u002Ftasks\u002F123\"\n    }\n  },\n  {\n    \"request\": {\n      \"path\": \"\u002Ftasks\u002F12\"\n    }\n  }\n]\n'"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:o,props:{id:G},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#requests-was-matched-by-an-upper-limit-count",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:H}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:T},{type:b,tag:h,props:{},children:[{type:a,value:"at most"}]},{type:a,value:U}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,t]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:d,props:{className:[e,u]},children:[{type:a,value:A}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,v]},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:y}]},{type:a,value:z},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:"'\n[\n  {\n    \"request\": {\n      \"path\": \"\u002Ftasks\u002F123\"\n    },\n    \"limit\": {\n      \"atMost\": 2\n    }\n  }\n]\n'"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:o,props:{id:I},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#requests-was-matched-by-a-lower-limit-count",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:J}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:T},{type:b,tag:h,props:{},children:[{type:a,value:"at least"}]},{type:a,value:U}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,t]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:d,props:{className:[e,u]},children:[{type:a,value:A}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,v]},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:y}]},{type:a,value:z},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:"'\n[\n  {\n    \"request\": {\n      \"path\": \"\u002Ftasks\u002F123\"\n    },\n    \"limit\": {\n      \"atLeast\": 2\n    }\n  }\n]\n'"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:o,props:{id:K},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#request-was-matched-by-an-exact-number",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Check if the requests have been received exactly twice"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,t]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:d,props:{className:[e,u]},children:[{type:a,value:A}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,v]},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:y}]},{type:a,value:z},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:"'\n[\n  {\n    \"request\": {\n      \"path\": \"\u002Ftasks\u002F123\"\n    },\n    \"limit\": {\n      \"atLeast\": 2,\n      \"atMost\": 2\n    }\n  }\n]\n'"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:o,props:{id:M},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#request-was-never-received",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:N}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Check if the requests was never matched"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,t]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:d,props:{className:[e,u]},children:[{type:a,value:A}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,v]},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:y}]},{type:a,value:z},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:"'\n[\n  {\n    \"request\": {\n      \"path\": \"\u002Ftasks\u002F123\"\n    },\n    \"limit\": {\n      \"atMost\": 0\n    }\n  }\n]\n'"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:a,value:c},{type:b,tag:S,props:{id:O},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#sequence-assertions",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:P}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Request can also matched int the order in which they are received by the server."}]},{type:a,value:c},{type:b,tag:o,props:{id:Q},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#requests-were-received-in-a-particular-order",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:R}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Check if the requests were received in the specific order"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,t]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:d,props:{className:[e,u]},children:[{type:a,value:A}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,v]},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:y}]},{type:a,value:" http:\u002F\u002Flocalhost:8081\u002Fapi\u002Frequests\u002Fsequence -d "},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:"'\n[\n  {\n    \"path\": \"\u002Ftasks\u002F123\"\n  },\n  {\n    \"path\": \"\u002Ftasks\u002F123\u002Fdocs\u002Ficon.png\"\n  }\n]\n'"}]},{type:a,value:c}]}]}]}]},dir:"\u002Fen",path:"\u002Fen\u002Fassertions",extension:".md",createdAt:V,updatedAt:V,to:"\u002Fassertions",category:""},prev:{title:"REST API",path:"\u002Fen\u002Fapi",to:"\u002Fapi"},next:null}],fetch:{},mutations:[]}}("text","element","\n","span","token","string","p","code","a","true",-1,"icon","icon-link",3,"h3","div","nuxt-content-highlight","pre","language-shell","line-numbers","comment","function","curl"," -X PUT -H ","\"Content-Type: application\u002Fjson\""," http:\u002F\u002Flocalhost:8081\u002Fapi\u002Frequests\u002Fassert -d ","# Responds with 201 if it were matched","assertions","Assertions",2,"request-was-matched-at-least-once","Request was matched at least once","requests-was-matched-by-an-upper-limit-count","Requests was matched by an upper limit count","requests-was-matched-by-a-lower-limit-count","Requests was matched by a lower limit count","request-was-matched-by-an-exact-number","Request was matched by an exact number","request-was-never-received","Request was never received","sequence-assertions","Sequence Assertions","requests-were-received-in-a-particular-order","Requests were received in a particular order","h2","Check if the requests have been received and matched "," twice","2022-02-17T19:27:12.930Z")));