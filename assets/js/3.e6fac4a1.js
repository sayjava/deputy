(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{149:function(t,a,e){t.exports=e.p+"assets/img/dev_environment.2e3caec8.png"},183:function(t,a,e){t.exports=e.p+"assets/img/logs.f4e9ddc0.png"},184:function(t,a,e){t.exports=e.p+"assets/img/visualize.99c9b65a.png"},185:function(t,a,e){t.exports=e.p+"assets/img/disable_mocks.6831949e.png"},186:function(t,a,e){t.exports=e.p+"assets/img/test_environment.8e9be735.png"},197:function(t,a,e){"use strict";e.r(a);var s=e(6),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"start-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-server"}},[t._v("#")]),t._v(" Start Server")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker run -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":8080 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(":8081 sayjava/deputy\n")])])]),s("ul",[s("li",[t._v("This will start the server on port "),s("code",[t._v("8080")]),t._v(" and ready to receive requests at "),s("a",{attrs:{href:"%60http://localhost:8080%60"}},[s("code",[t._v("http://localhost:8080")])])]),t._v(" "),s("li",[t._v("The dashboard will be accessible at "),s("a",{attrs:{href:"%60http://localhost:8081%60"}},[s("code",[t._v("http://localhost:8081")])])])]),t._v(" "),s("h2",{attrs:{id:"server-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server-options"}},[t._v("#")]),t._v(" Server Options")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Configuration")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Env Variable")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Default")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--mocks-directory, -d")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("DEPUTY_MOCKS_DIRECTORY")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("mocks")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Path to a folder containing yaml/json mock definition files")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--port, -p")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("DEPUTY_PORT")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("8080")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("The port the mock sever runs on")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--auto-proxy, -px")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("DEPUTY_AUTO_PROXY")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Auto proxy requests")])])])]),t._v(" "),s("h2",{attrs:{id:"initialize-mocks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initialize-mocks"}},[t._v("#")]),t._v(" Initialize Mocks")]),t._v(" "),s("p",[t._v("When started, the server scan the mocks folder in the current working directory and will load all the "),s("code",[t._v(".yml")]),t._v(" or "),s("code",[t._v(".json")]),t._v(" files. See the "),s("a",{attrs:{href:"/guide"}},[t._v("Mock Definition")]),t._v(".")]),t._v(" "),s("p",[t._v("an example "),s("code",[t._v("hello_world.yml")]),t._v(" file looks like:")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /who"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("am"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("response")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" I am deputy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" an HTTP Mocking Server")])])]),s("p",[t._v("now the server can be started by mounting the current folder into the server directory")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":8080 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(":8081 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-v "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PWD")]),t._v("}")]),t._v(':/app/mocks"')]),t._v(" sayjava/deputy\n")])])]),s("p",[s("a",{attrs:{href:"/guide"}},[t._v("Learn more about behaviors")])]),t._v(" "),s("h2",{attrs:{id:"dashboard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dashboard"}},[t._v("#")]),t._v(" Dashboard")]),t._v(" "),s("p",[t._v("Deputy starts a Dashboard and API on the mock server port + 1. i.e if the mock server is started on port "),s("code",[t._v("8080")]),t._v(", then the REST API and Dashboard are on "),s("code",[t._v("http://localhost:8081/dashboard")]),t._v(" for the UI and "),s("code",[t._v("http://localhost:8081/api")]),t._v(" for the REST APIs")]),t._v(" "),s("h3",{attrs:{id:"logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logs"}},[t._v("#")]),t._v(" Logs")]),t._v(" "),s("p",[t._v("The UI list the requests received with the most recent at the top\n"),s("img",{attrs:{src:e(183),alt:"logs"}})]),t._v(" "),s("h3",{attrs:{id:"visualization"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#visualization"}},[t._v("#")]),t._v(" Visualization")]),t._v(" "),s("p",[t._v("The requests can also be visualized by an auto-generated sequence diagram with support for services behind gateways")]),t._v(" "),s("p",[s("img",{attrs:{src:e(184),alt:"Visualize"}})]),t._v(" "),s("h3",{attrs:{id:"enable-disable-mocks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enable-disable-mocks"}},[t._v("#")]),t._v(" Enable/Disable Mocks")]),t._v(" "),s("p",[t._v("Mocks can easily be created/deleted/edited/cloned from the UI and they can also be temporarily disabled")]),t._v(" "),s("p",[s("img",{attrs:{src:e(185),alt:"disable"}})]),t._v(" "),s("h2",{attrs:{id:"logging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logging"}},[t._v("#")]),t._v(" Logging")]),t._v(" "),s("p",[t._v("The server uses the environmental variable "),s("code",[t._v("NODE_LOG_LEVEL")]),t._v(" to enable logging. Possible values")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("INFO")])]),t._v(" "),s("li",[s("code",[t._v("DEBUG")])]),t._v(" "),s("li",[s("code",[t._v("ERROR")])])]),t._v(" "),s("h2",{attrs:{id:"use-case-scenarios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-case-scenarios"}},[t._v("#")]),t._v(" Use case scenarios")]),t._v(" "),s("p",[t._v("There are different ways to setup a dev/test environment with Deputy. Here are a few examples")]),t._v(" "),s("h3",{attrs:{id:"as-a-standalone-test-dev-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-a-standalone-test-dev-server"}},[t._v("#")]),t._v(" As a standalone test/dev server")]),t._v(" "),s("p",[s("img",{attrs:{src:e(186),alt:"media/test_environment"}})]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker run -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":8080 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(":8081 sayjava/deputy\n")])])]),s("p",[t._v("This can also be used to just to inspect network calls made by the application")]),t._v(" "),s("h3",{attrs:{id:"transparent-mix-of-mocks-remote-apis-docker-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transparent-mix-of-mocks-remote-apis-docker-compose"}},[t._v("#")]),t._v(" Transparent Mix Of Mocks & Remote APIs (Docker Compose)")]),t._v(" "),s("p",[s("img",{attrs:{src:e(149),alt:"media/dev_environment"}})]),t._v(" "),s("p",[t._v("Using deputy transparently with an application without modifying the code base\nof the application. See the https://github.com/sayjava/deputy/tree/main/examples.")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deputy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" @sayjava/deputy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("DEPUTY_PORT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./mocks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/app/mocks\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8081"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")])])])]),s("h2",{attrs:{id:"enable-https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enable-https"}},[t._v("#")]),t._v(" Enable HTTPS")]),t._v(" "),s("p",[t._v("If deputy detects a folder called "),s("code",[t._v("ssl")]),t._v(" it's current directory, it will auto start in https mode.\nThe ssl folder must contain certification and key files named as:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("key.pem")])]),t._v(" "),s("li",[s("code",[t._v("cert.pem")])])]),t._v(" "),s("p",[t._v("An example HTTPS server looks like this example.")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deputy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" @sayjava/deputy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("DEPUTY_PORT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./mocks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/app/mocks\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Mount key.pem and cert.pem files ")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./ssl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/app/ssl\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8081"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")])])])]),s("p",[t._v("In this example, the deputy server will be available on https://localhost:8080")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("The API and Dashboard endpoints are always running on http. i.e http://localhost/dashboard")])])])}),[],!1,null,null,null);a.default=n.exports}}]);